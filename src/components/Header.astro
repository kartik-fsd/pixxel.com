---
import { Camera } from "lucide-react";
import { CONTACT } from "../utils/constants";
---

<nav
  class="sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60"
>
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex h-16 items-center justify-between">
      <a href="/" class="flex items-center space-x-2">
        <Camera className="h-6 w-6" />
        <span class="text-xl font-bold font-display">Pixxel City</span>
      </a>

      <div class="hidden md:flex md:items-center md:space-x-8">
        <a
          href="/"
          class="text-sm font-medium transition-colors hover:text-primary"
        >
          Home
        </a>
        <a
          href="/gallery"
          class="text-sm font-medium transition-colors hover:text-primary"
        >
          Gallery
        </a>
        <a
          href="/sets"
          class="text-sm font-medium transition-colors hover:text-primary"
        >
          Sets
        </a>
        <a
          href="/packages"
          class="text-sm font-medium transition-colors hover:text-primary"
        >
          Packages
        </a>
        <a
          href="/contact-us"
          class="inline-flex items-center justify-center rounded-md bg-primary px-4 py-2 text-sm font-medium text-primary-foreground transition-colors hover:bg-primary/90"
        >
          Book Now
        </a>
      </div>

      <button
        id="mobile-menu-button"
        type="button"
        class="inline-flex items-center justify-center rounded-md p-2.5 text-gray-700 md:hidden"
        aria-controls="mobile-menu"
        aria-expanded="false"
      >
        <span class="sr-only">Open main menu</span>
        <svg
          class="h-6 w-6 block"
          id="menu-open-icon"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
        </svg>
        <svg
          class="h-6 w-6 hidden"
          id="menu-close-icon"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile menu, show/hide based on menu state -->
  <div class="hidden" id="mobile-menu">
    <div class="space-y-1 px-4 py-3 sm:px-6">
      <a
        href="/"
        class="block py-2 text-base font-medium transition-colors hover:text-primary"
      >
        Home
      </a>
      <a
        href="/gallery"
        class="block py-2 text-base font-medium transition-colors hover:text-primary"
      >
        Gallery
      </a>
      <a
        href="/sets"
        class="block py-2 text-base font-medium transition-colors hover:text-primary"
      >
        Sets
      </a>
      <a
        href="/packages"
        class="block py-2 text-base font-medium transition-colors hover:text-primary"
      >
        Packages
      </a>
      <a
        href="/contact-us"
        class="mt-2 block rounded-md bg-primary px-4 py-2 text-center text-base font-medium text-primary-foreground transition-colors hover:bg-primary/90"
      >
        Book Now
      </a>
    </div>
  </div>
</nav>

<script>
  // Wait for the DOM to be fully loaded
  document.addEventListener("DOMContentLoaded", () => {
    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");
    const menuOpenIcon = document.getElementById("menu-open-icon");
    const menuCloseIcon = document.getElementById("menu-close-icon");

    if (mobileMenuButton && mobileMenu && menuOpenIcon && menuCloseIcon) {
      mobileMenuButton.addEventListener("click", () => {
        // Toggle mobile menu visibility
        mobileMenu.classList.toggle("hidden");

        // Toggle icon visibility
        menuOpenIcon.classList.toggle("hidden");
        menuCloseIcon.classList.toggle("hidden");

        // Update aria-expanded attribute
        const isExpanded =
          mobileMenuButton.getAttribute("aria-expanded") === "true";
        mobileMenuButton.setAttribute(
          "aria-expanded",
          (!isExpanded).toString()
        );
      });
    }
  });
</script>
